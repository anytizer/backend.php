/**
* Skeleton of [Query Users Groups: query_users_groups]
* User groups to classify and set various permissions to them
* ==========================================================
* Timely view/truncate this table, as it may swell too soon.
*
* @package Backend Framework
*/

CREATE TABLE `query_users_groups` (
  `relationship_id` int(10) unsigned NOT NULL AUTO_INCREMENT COMMENT 'Relationship ID',
  `group_id` int(10) unsigned NOT NULL DEFAULT '0' COMMENT 'Group ID',
  `subdomain_id` int(10) unsigned NOT NULL DEFAULT '0' COMMENT 'For which Subdomain ID?',
  `added_on` datetime NOT NULL DEFAULT '0000-00-00 00:00:00' COMMENT 'Added on',
  `fixed_on` datetime NOT NULL DEFAULT '0000-00-00 00:00:00' COMMENT 'Last time when CRON executed on this record',
  `modified_on` datetime NOT NULL DEFAULT '0000-00-00 00:00:00' COMMENT 'Modified on',
  `modified_counter` int(10) unsigned NOT NULL DEFAULT '0' COMMENT 'Number of total modifications',
  `sink_weight` int(10) unsigned NOT NULL DEFAULT '0' COMMENT 'Sink weight',
  `is_active` enum('N','Y') NOT NULL DEFAULT 'N' COMMENT 'Allow to login? D = Account deleted',
  `is_approved` enum('N','Y') NOT NULL DEFAULT 'N' COMMENT 'Approved user group?',
  `can_login` enum('N','Y') NOT NULL DEFAULT 'N' COMMENT 'Can this group of users login?',
  `group_name` varchar(255) NOT NULL DEFAULT '' COMMENT 'Full group name',
  `group_description` text NOT NULL COMMENT 'Some description of this group of users',
  PRIMARY KEY (`relationship_id`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8 COMMENT='User groups to classify and set various permissions to them';

